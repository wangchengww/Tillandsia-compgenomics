if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
BiocManager::install("DESeq2")
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/II. Expression figure/B-Expression-curves-multicopy/")
library(dplyr)
library(tidyselect)
library(ggplot2)
dat <- read.table("counts.Tfas_Tlei_6_timepoints.exons.txt", head = T)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.09221"))
gene1_tlei <- gene1[,43:78]
means <- rowMeans((gene1_tlei))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.09221 in Tlei")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.09221"))
gene1_tfas <- gene1[,7:42]
means <- rowMeans((gene1_tfas))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.09221 in Tfas")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.25891"))
gene1_tlei <- gene1[,43:78]
means <- rowMeans((gene1_tlei))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.25891 in Tlei")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.25891"))
gene1_tfas <- gene1[,7:42]
means <- rowMeans((gene1_tfas))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.25891 in Tfas")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.06440"))
gene1_tlei <- gene1[,43:78]
means <- rowMeans((gene1_tlei))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.06440 in Tlei")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.06440"))
gene1_tfas <- gene1[,7:42]
means <- rowMeans((gene1_tfas))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.06440 in Tfas")
summary(means)
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/II. Expression figure/B-Expression-curves-multicopy/")
library(dplyr)
library(tidyselect)
library(ggplot2)
dat <- read.table("counts.Tfas_Tlei_6_timepoints.exons.txt", head = T)
pdf("Per-exon_counts_OG0000580_PFP.pdf")
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.09221"))
gene1_tlei <- gene1[,43:78]
means <- rowMeans((gene1_tlei))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.09221 (red) in Tlei")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.09221"))
gene1_tfas <- gene1[,7:42]
means <- rowMeans((gene1_tfas))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.09221 (red) in Tfas")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.25891"))
gene1_tlei <- gene1[,43:78]
means <- rowMeans((gene1_tlei))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.25891 (green) in Tlei")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.25891"))
gene1_tfas <- gene1[,7:42]
means <- rowMeans((gene1_tfas))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.25891 (green) in Tfas")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.06440"))
gene1_tlei <- gene1[,43:78]
means <- rowMeans((gene1_tlei))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.06440 (yellow) in Tlei")
summary(means)
gene1 <- subset(dat, startsWith(dat$Geneid, "Tfasc_v1.06440"))
gene1_tfas <- gene1[,7:42]
means <- rowMeans((gene1_tfas))
means <- as.data.frame(cbind(gene1$Geneid, as.numeric(means)))
means$pos <- c(1:19)
colnames(means) <- c("exon", "mean", "pos")
means$mean <- as.numeric(means$mean)
ggplot(means, aes(x=pos, y=mean)) +
geom_bar(stat="identity") +
ggtitle("Tfasc_v1.06440 (yellow) in Tfas")
dev.off()
summary(means)
setwd('/home/clara/Documents/GitHub/Tillandsia-compgenomics/II. Expression figure/C-GO-term-list/')
go <- read.table("GO-term_enrichment_mod_TLEI-REF_exonic.txt", header = T)
go <- read.table("GO-term_enrichment_mod_TLEI-REF_exonic.txt", header = T, sep = "\t")
View(go)
library("GOplot")
install.packages("GOplot")
library(stringr)
genes <- str_split(go$Genes, ", ")
View(genes)
genes <- unlist(str_split(go$Genes, ", "))
ortho_info <- read.table("orthogroups_Tfas_Tlei_Acom.per_gene.with_functional_info.no_TEs.size_corrections.no_plastid-mito-ribo.blastandsearch_noAcom.txt",
sep = "\t")
View(ortho_info)
colnames(ortho_info) <- c("gene_ID", "chr", "start", "end", "GOterm", "Description", "orthogroup", "count_Acom",
"count_Tfas", "count_Tlei")
genelist <- unlist(str_split(go$Genes, ", ")),
genes <- subset(ortho_info, gene_ID %in% genelist)
genelist <- unlist(str_split(go$Genes, ", ")),
genes <- subset(ortho_info, gene_ID %in% genelist)
genelist <- unlist(str_split(go$Genes, ", "))
genes <- subset(ortho_info, gene_ID %in% genelist)
View(genes)
genelist
View(ortho_info)
unique(genes)
unique(genelist)
View(go)
str_split(go$Genes, ", ")
unlist(str_split(go$Genes, ", "))
str_split(go$Genes, ", ")
genelist <- (str_split(go$Genes, ", "))
View(genelist)
length(genelist)
sapply(genelist, function(x) sum(x))
sapply(genelist, function(x) length(x))
sum(sapply(genelist, function(x) length(x)))
View(go)
go <- read.table("GO-term_enrichment_mod_TLEI-REF_exonic.txt", header = T, sep = "\t")
go <- read.delim("GO-term_enrichment_mod_TLEI-REF_exonic.txt", header = T, sep = "\t")
ortho_info <- read.table("orthogroups_Tfas_Tlei_Acom.per_gene.with_functional_info.no_TEs.size_corrections.no_plastid-mito-ribo.blastandsearch_noAcom.txt",
sep = "\t")
colnames(ortho_info) <- c("gene_ID", "chr", "start", "end", "GOterm", "Description", "orthogroup", "count_Acom",
"count_Tfas", "count_Tlei")
genelist <- (str_split(go$Genes, ", "))
genelist <- unlist(str_split(go$Genes, ", "))
genes <- subset(ortho_info, gene_ID %in% genelist)
View(genes)
ortho_info <- read.delim("orthogroups_Tfas_Tlei_Acom.per_gene.with_functional_info.no_TEs.size_corrections.no_plastid-mito-ribo.blastandsearch_noAcom.txt",
sep = "\t")
colnames(ortho_info) <- c("gene_ID", "chr", "start", "end", "GOterm", "Description", "orthogroup", "count_Acom",
"count_Tfas", "count_Tlei")
genelist <- unlist(str_split(go$Genes, ", "))
genes <- subset(ortho_info, gene_ID %in% genelist)
genes <- genes[,c(1,9-10)]
genes <- genes[,c(1,9,10)]
genes$difference <- genes$count_Tfas - genes$count_Tlei
genes <- genes[,c(1,4)]
colnames(genes) <- c("ID", "logFC")
circ <- circle_dat(go, genes)
library("GOplot")
circ <- circle_dat(go, genes)
View(circ)
GOBar(subset(circ, category == 'BP'))
